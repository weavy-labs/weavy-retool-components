{"name":"WeavyAuthentication","description":null,"organizationId":916896,"isEnabled":false,"crontab":null,"timezone":"Europe/Berlin","blockData":[{"top":-2656,"left":16,"uuid":"455ffb57-d968-4b67-af83-2b24989a1ddd","options":{},"pluginId":"startTrigger","blockType":"webhook","dimensions":{"width":368,"height":320},"editorType":"JavascriptQuery","environment":"production","isMinimized":false,"resourceName":"webhook","incomingOnSuccessEdges":[]},{"top":-2560,"left":944,"uuid":"d4701733-c2b4-4df5-b623-aaf37aa13528","pluginId":"createuser","blockType":"default","dimensions":{"width":432,"height":595},"editorType":"RESTQuery","environment":"production","resourceName":"REST-WithoutResource","responsePanelState":"closed","incomingOnSuccessEdges":["520e9c86-0cd1-4511-9300-810bd6e1e2bb"]},{"top":-1904,"left":784,"uuid":"b38c663c-3a42-4248-bb22-7123d8401b35","pluginId":"getaccesstoken","blockType":"default","dimensions":{"width":640,"height":555},"editorType":"RESTQuery","environment":"production","resourceName":"REST-WithoutResource","responsePanelState":"closed","incomingOnSuccessEdges":["520e9c86-0cd1-4511-9300-810bd6e1e2bb"]},{"top":-1952,"left":1488,"uuid":"145745e0-a8cc-41c2-b383-d8112141ba3a","options":{"body":"{\n  \"access_token\" : getaccesstoken.data.access_token\n}","status":"200"},"pluginId":"accesstoken","blockType":"webhookReturn","dimensions":{"width":544,"height":248},"editorType":"JavascriptQuery","environment":"production","isMinimized":false,"resourceName":"JavascriptQuery","responsePanelState":"closed","incomingOnSuccessEdges":["b38c663c-3a42-4248-bb22-7123d8401b35"]},{"top":-2256,"left":80,"uuid":"520e9c86-0cd1-4511-9300-810bd6e1e2bb","pluginId":"init","blockType":"code","dimensions":{"width":576,"height":288},"editorType":"JavascriptQuery","environment":"production","resourceName":"JavascriptQuery","responsePanelState":"open","incomingOnSuccessEdges":["455ffb57-d968-4b67-af83-2b24989a1ddd"]}],"templateData":"[\"~#iR\",[\"^ \",\"n\",\"appTemplate\",\"v\",[\"^ \",\"appMaxWidth\",\"100%\",\"appStyles\",\"\",\"appTesting\",null,\"appThemeId\",null,\"appThemeModeId\",null,\"appThemeName\",null,\"createdAt\",null,\"customComponentCollections\",[],\"customDocumentTitle\",\"\",\"customDocumentTitleEnabled\",false,\"customShortcuts\",[],\"experimentalDataTabEnabled\",false,\"experimentalFeatures\",[\"^ \",\"sourceControlTemplateDehydration\",false,\"multiplayerEditingEnabled\",false,\"disableMultiplayerEditing\",false],\"folders\",[\"~#iL\",[]],\"formAppSettings\",[\"^ \",\"customRedirectUrl\",\"\"],\"inAppRetoolPillAppearance\",\"NO_OVERRIDE\",\"instrumentationEnabled\",false,\"internationalizationSettings\",[\"^ \",\"internationalizationEnabled\",false,\"internationalizationFiles\",[]],\"isFetching\",false,\"isFormApp\",false,\"isGlobalWidget\",false,\"isMobileApp\",false,\"loadingIndicatorsDisabled\",false,\"markdownLinkBehavior\",\"auto\",\"mobileAppSettings\",[\"^ \",\"mobileOfflineModeEnabled\",false,\"mobileOfflineModeDelaySync\",false,\"mobileOfflineModeBannerMode\",\"default\",\"displaySetting\",[\"^ \",\"landscapeMode\",false,\"tabletMode\",false]],\"multiScreenMobileApp\",false,\"notificationsSettings\",[\"^ \",\"globalQueryShowFailureToast\",true,\"globalQueryShowSuccessToast\",false,\"globalQueryToastDuration\",4.5],\"pageCodeFolders\",[\"^ \"],\"pageLoadValueOverrides\",[\"^B\",[]],\"plugins\",[\"~#iOM\",[\"startTrigger\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"startTrigger\",\"uuid\",null,\"type\",\"datasource\",\"subtype\",\"JavascriptQuery\",\"namespace\",null,\"resourceName\",\"JavascriptQuery\",\"resourceDisplayName\",null,\"template\",[\"^13\",[\"queryRefreshTime\",\"\",\"allowedGroupIds\",[\"^B\",[]],\"streamResponse\",false,\"lastReceivedFromResourceAt\",null,\"queryDisabledMessage\",\"\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"workflowRunId\",null,\"showFailureToaster\",true,\"query\",\"return { \\n  \\\"uid\\\" : {{ current_user.sid }}, \\n  \\\"fullname\\\" : {{ current_user.fullName }}, \\n  \\\"email\\\" : {{ current_user.email }}, \\n  \\\"avatar\\\" : {{ current_user.profilePhotoUrl }}\\n}\\n\\n\",\"playgroundQueryUuid\",\"\",\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^B\",[]],\"workflowBlockUuid\",null,\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"importedQueryInputs\",[\"^13\",[]],\"_additionalScope\",[\"^B\",[]],\"isImported\",false,\"showSuccessToaster\",true,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"metadata\",null,\"workflowActionType\",null,\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"rawData\",null,\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^B\",[]],\"enableErrorTransformer\",false,\"showLatestVersionUpdatedWarning\",false,\"timestamp\",0,\"evalType\",\"script\",\"importedQueryDefaults\",[\"^13\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^B\",[]],\"queryTimeout\",\"10000\",\"workflowId\",null,\"requireConfirmation\",false,\"queryFailureConditions\",\"\",\"changesetIsObject\",false,\"enableCaching\",false,\"allowedGroups\",[\"^B\",[]],\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"style\",null,\"position2\",null,\"mobilePosition2\",null,\"mobileAppPosition\",null,\"tabIndex\",null,\"container\",\"\",\"^7\",\"~m1708339973610\",\"updatedAt\",\"~m1727904807964\",\"folder\",\"\",\"screen\",null]]],\"createuser\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"createuser\",\"^14\",null,\"^15\",\"datasource\",\"^16\",\"RESTQuery\",\"^17\",null,\"^18\",\"REST-WithoutResource\",\"^19\",null,\"^1:\",[\"^13\",[\"queryRefreshTime\",\"\",\"paginationLimit\",\"\",\"allowedGroupIds\",[\"^B\",[]],\"streamResponse\",false,\"body\",\"[{\\\"key\\\":\\\"name\\\",\\\"value\\\":\\\"{{ startTrigger.data.fullname }}\\\"},{\\\"key\\\":\\\"email\\\",\\\"value\\\":\\\"{{ startTrigger.data.email }}\\\"},{\\\"key\\\":\\\"picture\\\",\\\"value\\\":\\\"{{ startTrigger.data.avatar }}\\\"}]\",\"lastReceivedFromResourceAt\",null,\"queryDisabledMessage\",\"\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"paginationPaginationField\",\"\",\"headers\",\"[{\\\"key\\\":\\\"Authorization\\\",\\\"value\\\":\\\"Bearer {{ init.data.WEAVY_APIKEY }}\\\"}]\",\"workflowRunId\",null,\"showFailureToaster\",true,\"paginationEnabled\",false,\"query\",\"{{ init.data.WEAVY_URL}}/api/users/{{ startTrigger.data.uid }}\",\"playgroundQueryUuid\",\"\",\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^B\",[]],\"workflowBlockUuid\",null,\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"importedQueryInputs\",[\"^13\",[]],\"isImported\",false,\"showSuccessToaster\",true,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"cookies\",\"\",\"metadata\",null,\"workflowActionType\",null,\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"rawData\",null,\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^B\",[]],\"enableErrorTransformer\",false,\"showLatestVersionUpdatedWarning\",false,\"paginationDataField\",\"\",\"timestamp\",0,\"evalType\",\"script\",\"importedQueryDefaults\",[\"^13\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"version\",2,\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^B\",[]],\"queryTimeout\",\"10000\",\"workflowId\",null,\"requireConfirmation\",false,\"type\",\"PUT\",\"queryFailureConditions\",\"\",\"changesetIsObject\",false,\"enableCaching\",false,\"allowedGroups\",[\"^B\",[]],\"bodyType\",\"json\",\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"^1;\",null,\"^1<\",null,\"^1=\",null,\"^1>\",null,\"^1?\",null,\"^1@\",\"\",\"^7\",\"~m1708340044754\",\"^1A\",\"~m1708468462659\",\"^1B\",\"\",\"^1C\",null]]],\"getaccesstoken\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"getaccesstoken\",\"^14\",null,\"^15\",\"datasource\",\"^16\",\"RESTQuery\",\"^17\",null,\"^18\",\"REST-WithoutResource\",\"^19\",null,\"^1:\",[\"^13\",[\"queryRefreshTime\",\"\",\"paginationLimit\",\"\",\"allowedGroupIds\",[\"^B\",[]],\"streamResponse\",false,\"body\",\"[{\\\"key\\\":\\\"expires_in\\\",\\\"value\\\":\\\"28800\\\"}]\",\"lastReceivedFromResourceAt\",null,\"queryDisabledMessage\",\"\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"paginationPaginationField\",\"\",\"headers\",\"[{\\\"key\\\":\\\"Authorization\\\",\\\"value\\\":\\\"Bearer {{ init.data.WEAVY_APIKEY }}\\\"}]\",\"workflowRunId\",null,\"showFailureToaster\",true,\"paginationEnabled\",false,\"query\",\"{{ init.data.WEAVY_URL}}/api/users/{{ startTrigger.data.uid }}/tokens\",\"playgroundQueryUuid\",\"\",\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^B\",[]],\"workflowBlockUuid\",null,\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"importedQueryInputs\",[\"^13\",[]],\"isImported\",false,\"showSuccessToaster\",true,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"cookies\",\"\",\"metadata\",null,\"workflowActionType\",null,\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"rawData\",null,\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^B\",[]],\"enableErrorTransformer\",false,\"showLatestVersionUpdatedWarning\",false,\"paginationDataField\",\"\",\"timestamp\",0,\"evalType\",\"script\",\"importedQueryDefaults\",[\"^13\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"version\",2,\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^B\",[]],\"queryTimeout\",\"10000\",\"workflowId\",null,\"requireConfirmation\",false,\"type\",\"POST\",\"queryFailureConditions\",\"\",\"changesetIsObject\",false,\"enableCaching\",false,\"allowedGroups\",[\"^B\",[]],\"bodyType\",\"json\",\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"^1;\",null,\"^1<\",null,\"^1=\",null,\"^1>\",null,\"^1?\",null,\"^1@\",\"\",\"^7\",\"~m1708340360356\",\"^1A\",\"~m1712221889096\",\"^1B\",\"\",\"^1C\",null]]],\"accesstoken\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"accesstoken\",\"^14\",null,\"^15\",\"datasource\",\"^16\",\"JavascriptQuery\",\"^17\",null,\"^18\",\"JavascriptQuery\",\"^19\",null,\"^1:\",[\"^13\",[\"queryRefreshTime\",\"\",\"allowedGroupIds\",[\"^B\",[]],\"streamResponse\",false,\"lastReceivedFromResourceAt\",null,\"queryDisabledMessage\",\"\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"workflowRunId\",null,\"showFailureToaster\",true,\"query\",\"const generateReturn = () => {\\n    const status = () => {\\n      try {\\n        return 200\\n      } catch {\\n        return 200\\n      }\\n    }\\n  const body = () => {\\n    try {\\n      return {\\n  \\\"access_token\\\" : getaccesstoken.data.access_token\\n}\\n    } catch {\\n      return {'error': true, 'messsage': 'there was a problem parsing the JSON body of accesstoken'}\\n    }\\n  }\\n  return {status: status(), body: body() }\\n  }\\n  return generateReturn()\\n  \",\"playgroundQueryUuid\",\"\",\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^B\",[]],\"workflowBlockUuid\",null,\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"importedQueryInputs\",[\"^13\",[]],\"_additionalScope\",[\"^B\",[]],\"isImported\",false,\"showSuccessToaster\",true,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"metadata\",null,\"workflowActionType\",null,\"editorMode\",\"sql\",\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"rawData\",null,\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^B\",[]],\"enableErrorTransformer\",false,\"showLatestVersionUpdatedWarning\",false,\"timestamp\",0,\"evalType\",\"script\",\"importedQueryDefaults\",[\"^13\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^B\",[]],\"queryTimeout\",\"10000\",\"workflowId\",null,\"requireConfirmation\",false,\"queryFailureConditions\",\"\",\"changesetIsObject\",false,\"enableCaching\",false,\"allowedGroups\",[\"^B\",[]],\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"^1;\",null,\"^1<\",null,\"^1=\",null,\"^1>\",null,\"^1?\",null,\"^1@\",\"\",\"^7\",\"~m1708340735195\",\"^1A\",\"~m1708340967793\",\"^1B\",\"\",\"^1C\",null]]],\"init\",[\"^0\",[\"^ \",\"n\",\"pluginTemplate\",\"v\",[\"^ \",\"id\",\"init\",\"^14\",null,\"^15\",\"datasource\",\"^16\",\"JavascriptQuery\",\"^17\",null,\"^18\",\"JavascriptQuery\",\"^19\",null,\"^1:\",[\"^13\",[\"queryRefreshTime\",\"\",\"allowedGroupIds\",[\"^B\",[]],\"streamResponse\",false,\"lastReceivedFromResourceAt\",null,\"queryDisabledMessage\",\"\",\"servedFromCache\",false,\"offlineUserQueryInputs\",\"\",\"successMessage\",\"\",\"queryDisabled\",\"\",\"playgroundQuerySaveId\",\"latest\",\"workflowParams\",null,\"resourceNameOverride\",\"\",\"runWhenModelUpdates\",false,\"workflowRunId\",null,\"showFailureToaster\",true,\"query\",\"return { \\n    WEAVY_URL: retoolContext.configVars.WEAVY_URL,\\n    WEAVY_APIKEY: retoolContext.configVars.WEAVY_APIKEY\\n}\",\"playgroundQueryUuid\",\"\",\"playgroundQueryId\",null,\"error\",null,\"workflowRunBodyType\",\"raw\",\"privateParams\",[\"^B\",[]],\"workflowBlockUuid\",null,\"queryRunOnSelectorUpdate\",false,\"runWhenPageLoadsDelay\",\"\",\"data\",null,\"importedQueryInputs\",[\"^13\",[]],\"_additionalScope\",[\"^B\",[]],\"isImported\",false,\"showSuccessToaster\",true,\"cacheKeyTtl\",\"\",\"requestSentTimestamp\",null,\"metadata\",null,\"workflowActionType\",null,\"queryRunTime\",null,\"changesetObject\",\"\",\"errorTransformer\",\"// The variable 'data' allows you to reference the request's data in the transformer. \\n// example: return data.find(element => element.isError)\\nreturn data.error\",\"finished\",null,\"confirmationMessage\",null,\"isFetching\",false,\"changeset\",\"\",\"rawData\",null,\"queryTriggerDelay\",\"0\",\"resourceTypeOverride\",null,\"watchedParams\",[\"^B\",[]],\"enableErrorTransformer\",false,\"showLatestVersionUpdatedWarning\",false,\"timestamp\",0,\"evalType\",\"script\",\"importedQueryDefaults\",[\"^13\",[]],\"enableTransformer\",false,\"showUpdateSetValueDynamicallyToggle\",true,\"overrideOrgCacheForUserCache\",false,\"runWhenPageLoads\",false,\"transformer\",\"// Query results are available as the `data` variable\\nreturn data\",\"events\",[\"^B\",[]],\"queryTimeout\",\"10000\",\"workflowId\",null,\"requireConfirmation\",false,\"queryFailureConditions\",\"\",\"changesetIsObject\",false,\"enableCaching\",false,\"allowedGroups\",[\"^B\",[]],\"offlineQueryType\",\"None\",\"queryThrottleTime\",\"750\",\"updateSetValueDynamically\",false,\"notificationDuration\",\"\"]],\"^1;\",null,\"^1<\",null,\"^1=\",null,\"^1>\",null,\"^1?\",null,\"^1@\",\"\",\"^7\",\"~m1708357788134\",\"^1A\",\"~m1730201340167\",\"^1B\",\"\",\"^1C\",null]]]]],\"preloadedAppJavaScript\",null,\"preloadedAppJSLinks\",[],\"queryStatusVisibility\",false,\"responsiveLayoutDisabled\",false,\"rootScreen\",null,\"savePlatform\",\"web\",\"shortlink\",null,\"testEntities\",[],\"tests\",[],\"urlFragmentDefinitions\",[\"^B\",[]],\"version\",\"3.110.0\"]]]","triggerWebhooks":[{"name":"startTrigger","uuid":"startTrigger","inputSchema":{"properties":[]},"useHeaderApiKey":false,"exampleInputJSON":"{ \n  \"uid\" : {{ current_user.sid }}, \n  \"fullname\" : {{ current_user.fullName }}, \n  \"email\" : {{ current_user.email }}, \n  \"avatar\" : {{ current_user.profilePhotoUrl }}\n}\n\n"}],"customLibraries":[{"version":"4.17.21","language":"javascript","variable":"_","codeString":"/* Edit library variable below */\n\nconst _ = require('lodash')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"lodash"},{"version":"2.1.0","language":"javascript","variable":"numbro","codeString":"/* Edit library variable below */\n\nconst numbro = require('numbro')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"numbro"},{"version":"5.3.2","language":"javascript","variable":"Papa","codeString":"/* Edit library variable below */\n\nconst Papa = require('papaparse')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"papaparse"},{"version":"0.5.23","language":"javascript","variable":"moment","codeString":"/* Edit library variable below */\n\nconst moment = require('moment-timezone')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"moment-timezone"},{"version":"3.4.0","language":"javascript","variable":"uuid","codeString":"/* Edit library variable below */\n\nconst uuid = require('uuid')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n","libraryName":"uuid"}],"createdBy":1365656,"protected":false,"setupScripts":{"python":{"codeString":""},"javascript":{"codeString":"// lodash\n/* Edit library variable below */\n\nconst _ = require('lodash')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n\n\n// numbro\n/* Edit library variable below */\n\nconst numbro = require('numbro')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n\n\n// papaparse\n/* Edit library variable below */\n\nconst Papa = require('papaparse')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n\n\n// moment-timezone\n/* Edit library variable below */\n\nconst moment = require('moment-timezone')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */\n\n\n// uuid\n/* Edit library variable below */\n\nconst uuid = require('uuid')\n\n/* Add destructured imports from library below\neg. const { pow, log } = require(\"mathjs\") */"}},"subflows":[]}